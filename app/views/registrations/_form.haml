%p.terms.text-center
  = "Become a Diaspora backer for"
  %b 11 â‚¬ per year.
  = "There are no ads and no third-party tracking."
= form_for(resource, url: registration_path(resource_name), html: {class: "form-horizontal block-form", autocomplete: "off"}) do |f|

  %fieldset
    - if mobile
      %legend
        = image_tag("branding/logos/header-logo2x.png", height: 40, width: 40)
        = t("aspects.aspect_stream.make_something")

    - if mobile
      = f.label :email, t("registrations.new.email"), class: "control-label", id: "emailLabel"
    - else
      = f.label :email, t("registrations.new.email"), class: "sr-only control-label", id: "emailLabel"
      %i.entypo-mail
    = f.email_field :email,
                    autofocus:   true,
                    class:       "input-block-level form-control",
                    data:        {content: t("users.edit.your_email_private")},
                    placeholder: t("registrations.new.email"),
                    required:    true,
                    title:       t("registrations.new.enter_email"),
                    aria:        {labelledby: "emailLabel"}

    - if mobile
      %label.control-label#usernameLabel{for: "user_username"}
        = t("registrations.new.username")
    - else
      %label.sr-only.control-label#usernameLabel{for: "user_username"}
        = t("registrations.new.username")
      %i.entypo-user
    = f.text_field :username,
                   class:       "input-block-level form-control",
                   placeholder: t("registrations.new.username"),
                   title:       t("registrations.new.enter_username"),
                   required:    true,
                   pattern:     "[A-Za-z0-9_]+",
                   aria:        {labelledby: "usernameLabel"}

    - if mobile
      %label.control-label#passwordLabel{for: "user_password"}
        = t("registrations.new.password")
    - else
      %label.sr-only.control-label#passwordLabel{for: "user_password"}
        = t("registrations.new.password")
      %i.entypo-lock
    = f.password_field :password,
                       class:       "input-block-level form-control",
                       placeholder: t("registrations.new.password"),
                       title:       t("registrations.new.enter_password"),
                       required:    true,
                       pattern:     "......+",
                       aria:        {labelledby: "passwordLabel"}

    - if mobile
      %label.control-label#passwordConfirmationLabel{for: "user_password_confirmation"}
        = t("registrations.new.password_confirmation")
    - else
      %label.sr-only.control-label#passwordConfirmationLabel{for: "user_password_confirmation"}
        = t("registrations.new.password_confirmation")
      %i.entypo-lock
    = f.password_field :password_confirmation,
                       class:       "input-block-level form-control",
                       placeholder: t("registrations.new.password_confirmation"),
                       title:       t("registrations.new.enter_password_again"),
                       required:    true,
                       pattern:     "......+",
                       aria:        {labelledby: "passwordConfirmationLabel"}
    %br
    #card-element.input-block-level.form-control{:style => "padding-left: 10px;"}
    #card-errors{:role => "alert"}
    %br    

    - if AppConfig.settings.captcha.enable?
      = show_simple_captcha object: "user",
                            code_type: "numeric",
                            class: "simple-captcha-image",
                            input_html: {class: "form-control captcha-input"}

    = invite_hidden_tag(invite)

  - if AppConfig.settings.terms.enable?
    %p.terms.text-center#terms
      = t('registrations.new.terms', terms_link: link_to(t('registrations.new.terms_link'), terms_path, target: "_blank")).html_safe

  = f.submit t("registrations.new.sign_up"), class: "btn btn-block btn-large btn-primary", id: "submit-button", disabled: "false"
  
  %br
  %p.terms.text-center
    = "7 days free trial. Payment processed securely with bank-level SSL."
    
  %script{:src => "https://js.stripe.com/v3/"}
  :javascript
    var stripe = Stripe('pk_live_xxxxxxxxxxxxxxxx');
    var elements = stripe.elements();
    document.getElementById('submit-button').disabled = false;
    var style = {
      base: {
        // Add your base input styles here. For example:
        fontSize: '16px',
        color: '#666666',
        '::placeholder': {
          color: '#999999'
        },
      }
    };
    // Create an instance of the card Element.
    var card = elements.create('card', {style: style});
    // Add an instance of the card Element into the `card-element` <div>.
    card.mount('#card-element');
    card.addEventListener('change', function(event) {
      var displayError = document.getElementById('card-errors');
      if (event.error) {
        displayError.textContent = event.error.message;
        document.getElementById('submit-button').disabled = false;
      } else {
        displayError.textContent = '';
      }
    });
    // Create a token or display an error when the form is submitted.
    var form = document.getElementById('new_user');
    form.addEventListener('submit', function(event) {
      event.preventDefault();

      stripe.createToken(card).then(function(result) {
        if (result.error) {
          // Inform the customer that there was an error.
          var errorElement = document.getElementById('card-errors');
          errorElement.textContent = result.error.message;
          document.getElementById('submit-button').disabled = false;
        } else {
          // Send the token to your server.
          stripeTokenHandler(result.token);
        }
      });
    });
    function stripeTokenHandler(token) {
      // Insert the token ID into the form so it gets submitted to the server
      var form = document.getElementById('new_user');
      var hiddenInput = document.createElement('input');
      hiddenInput.setAttribute('type', 'hidden');
      hiddenInput.setAttribute('name', 'stripe_token');
      hiddenInput.setAttribute('value', token.id);
      form.appendChild(hiddenInput);

      // Submit the form
      form.submit();
    }

